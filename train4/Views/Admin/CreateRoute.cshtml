@{
    ViewData["Title"] = "Створення маршруту";
    var trains = ViewBag.Trains as List<train2.Models.Train>;
    var stations = ViewBag.Stations as List<train2.Models.Stations>;
}

<div class="container mt-4">
    <h1>Створення маршруту потяга</h1>
    
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Список потягів</a></li>
            <li class="breadcrumb-item active" aria-current="page">Створення маршруту</li>
        </ol>
    </nav>
    
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    
    <form method="post" id="createRouteForm">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Вибір потяга</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="trainId" class="form-label">Потяг</label>
                        <select class="form-select" id="trainId" name="trainId" required>
                            <option value="" disabled selected>Оберіть потяг</option>
                            @if (trains != null)
                            {
                                @foreach (var train in trains)
                                {
                                    <option value="@train.train_id">Потяг №@train.train_number (@train.carriage_count вагонів)</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="stationCount" class="form-label">Кількість станцій</label>
                        <input type="number" class="form-control" id="stationCount" name="stationCount" required min="2" value="2" readonly>
                        <small class="form-text text-muted">Кількість станцій буде автоматично підрахована</small>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Станції маршруту</h5>
                <button type="button" class="btn btn-light btn-sm" id="addStation">
                    <i class="bi bi-plus-lg"></i> Додати станцію
                </button>
            </div>
            <div class="card-body">
                <div id="stationsContainer">
                    <!-- Тут будуть динамічно додаватися станції -->
                </div>
                <div id="noStations" class="text-center py-3">
                    <p class="text-muted">Додайте станції до маршруту, використовуючи кнопку вище</p>
                    <p class="text-muted"><small>Мінімум 2 станції для створення маршруту</small></p>
                </div>
            </div>
        </div>
        
        <div class="card mb-4" id="routePreview" style="display: none;">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">Попередній перегляд маршруту</h5>
            </div>
            <div class="card-body">
                <div id="routePreviewContent">
                    <!-- Тут буде відображатися попередній перегляд маршруту -->
                </div>
            </div>
        </div>
        
        <div class="d-flex justify-content-between mb-5">
            <a asp-action="Index" class="btn btn-secondary">Скасувати</a>
            <button type="submit" class="btn btn-success" id="submitBtn" disabled>Створити маршрут</button>
        </div>
    </form>
</div>

<style>
    .station-item {
        border-left: 4px solid #007bff;
        transition: all 0.3s ease;
    }
    
    .station-item:hover {
        border-left-color: #0056b3;
        transform: translateX(5px);
    }
    
    .route-arrow {
        text-align: center;
        color: #6c757d;
        font-size: 1.2em;
        margin: 10px 0;
    }
    
    .drag-handle {
        cursor: move;
        user-select: none;
    }
    
    .station-order {
        background: #007bff;
        color: white;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const stations = @Html.Raw(Json.Serialize(stations));
        const stationsContainer = document.getElementById('stationsContainer');
        const noStations = document.getElementById('noStations');
        const addStationBtn = document.getElementById('addStation');
        const stationCountInput = document.getElementById('stationCount');
        const submitBtn = document.getElementById('submitBtn');
        const routePreview = document.getElementById('routePreview');
        const routePreviewContent = document.getElementById('routePreviewContent');

        let stationCounter = 0;

        // Функція для додавання нової станції
        function addStation() {
            stationCounter++;
            updateStationCount();

            const stationDiv = document.createElement('div');
            stationDiv.className = 'station-item card mb-3';
            stationDiv.dataset.index = stationCounter;

            stationDiv.innerHTML = `
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-1">
                            <div class="station-order">${stationCounter}</div>
                        </div>
                        <div class="col-md-9">
                            <label class="form-label">Станція ${stationCounter}</label>
                            <select name="stationIds" class="form-select station-select" required>
                                <option value="" disabled selected>Оберіть станцію</option>
                                ${stations.map(s => `<option value="${s.station_id}">${s.station_name}</option>`).join('')}
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-outline-danger btn-sm remove-station" title="Видалити станцію">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
                ${stationCounter < 10 ? '<div class="route-arrow"><i class="bi bi-arrow-down"></i></div>' : ''}
            `;

            stationsContainer.appendChild(stationDiv);

            // Видалення
            stationDiv.querySelector('.remove-station').addEventListener('click', function () {
                stationDiv.remove();
                updateStationCount();
                updateStationOrder();
                updateRoutePreview();
            });

            // Вибір станції
            stationDiv.querySelector('.station-select').addEventListener('change', function () {
                updateRoutePreview();
                validateDuplicateStations();
            });

            updateVisibility();
            updateRoutePreview();
        }

        function updateStationCount() {
            const stationItems = document.querySelectorAll('.station-item');
            stationCountInput.value = stationItems.length;
            submitBtn.disabled = stationItems.length < 2;
        }

        function updateStationOrder() {
            const stationItems = document.querySelectorAll('.station-item');
            stationItems.forEach((item, index) => {
                const orderDiv = item.querySelector('.station-order');
                const label = item.querySelector('label');
                orderDiv.textContent = index + 1;
                label.textContent = `Станція ${index + 1}`;
            });
        }

        function validateDuplicateStations() {
            const selects = document.querySelectorAll('.station-select');
            const selectedValues = Array.from(selects).map(s => s.value).filter(v => v);
            const hasDuplicates = selectedValues.length !== new Set(selectedValues).size;

            selects.forEach(select => {
                if (hasDuplicates && selectedValues.filter(v => v === select.value).length > 1) {
                    select.classList.add('is-invalid');
                } else {
                    select.classList.remove('is-invalid');
                }
            });

            return !hasDuplicates;
        }

        function updateRoutePreview() {
            const stationItems = document.querySelectorAll('.station-item');
            const selectedStations = [];

            stationItems.forEach(item => {
                const select = item.querySelector('.station-select');
                if (select.value) {
                    const stationName = select.options[select.selectedIndex].text;
                    selectedStations.push(stationName);
                }
            });

            if (selectedStations.length >= 2) {
                routePreview.style.display = 'block';
                routePreviewContent.innerHTML = `
                    <div class="d-flex align-items-center flex-wrap">
                        ${selectedStations.map((station, index) => `
                            <span class="badge bg-primary me-2 mb-2 p-2">${index + 1}. ${station}</span>
                            ${index < selectedStations.length - 1 ? '<i class="bi bi-arrow-right text-muted me-2 mb-2"></i>' : ''}
                        `).join('')}
                    </div>
                    <p class="mt-2 text-muted">
                        <small>Загальна кількість станцій: ${selectedStations.length}</small>
                    </p>
                `;
            } else {
                routePreview.style.display = 'none';
            }
        }

        function updateVisibility() {
            if (stationCounter > 0) {
                noStations.style.display = 'none';
            } else {
                noStations.style.display = 'block';
            }
        }

        addStationBtn.addEventListener('click', addStation);

        document.getElementById('createRouteForm').addEventListener('submit', function (e) {
            const stationItems = document.querySelectorAll('.station-item');
            const trainSelect = document.getElementById('trainId');

            if (!trainSelect.value) {
                e.preventDefault();
                alert('Оберіть потяг для створення маршруту!');
                return;
            }

            if (stationItems.length < 2) {
                e.preventDefault();
                alert('Додайте принаймні 2 станції для створення маршруту!');
                return;
            }

            let allStationsSelected = true;
            document.querySelectorAll('.station-select').forEach(select => {
                if (!select.value) {
                    allStationsSelected = false;
                }
            });

            if (!allStationsSelected) {
                e.preventDefault();
                alert('Оберіть всі станції в маршруті!');
                return;
            }

            if (!validateDuplicateStations()) {
                e.preventDefault();
                alert('В маршруті не може бути повторюваних станцій!');
                return;
            }
        });

        addStation();
        addStation();
    });
</script>
